[project]
name = "resume-matcher-backend"
version = "0.1.0"
description = "Resume Matcher Backend API"
authors = [
    { name = "Resume Matcher Contributors" },
]
license = { text = "MIT" }
requires-python = ">=3.12"
keywords = ["resume", "ats", "matching", "ai", "fastapi"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
]
dependencies = [
    "aiosqlite>=0.21.0",
    "beautifulsoup4>=4.13.4",
    "coloredlogs>=15.0.1",
    "email-validator>=2.2.0",
    "fastapi>=0.115.12",
    "html2text>=2025.4.15",
    "httpx>=0.28.1",
    "itsdangerous>=2.2.0",
    "magika>=0.6.1",
    "markdown>=3.8",
    "markdownify>=1.1.0",
    "markitdown[all]>=0.1.2",
    "numpy>=2.2.4",
    "ollama>=0.4.7",
    "openai>=1.75.0",
    "pdfminer-six>=20250327",
    "pydantic>=2.11.3",
    "pydantic-settings>=2.8.1",
    "python-dotenv>=1.1.0",
    "python-multipart>=0.0.20",
    "requests>=2.32.3",
    "sqlalchemy>=2.0.40",
    "tqdm>=4.67.1",
    "uvicorn>=0.34.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]
test = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "httpx>=0.28.1",
]

[project.scripts]
resume-matcher-backend = "app.main:app"

[project.urls]
Homepage = "https://github.com/PR-HARIHARAN/Resume-Matcher"
Repository = "https://github.com/PR-HARIHARAN/Resume-Matcher"
Issues = "https://github.com/PR-HARIHARAN/Resume-Matcher/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "W", "C", "I"]
ignore = ["E501"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=app --cov-report=term-missing"
asyncio_mode = "auto"
