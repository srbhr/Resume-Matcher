SESSION_SECRET_KEY="CHANGE_ME_SECURE_RANDOM"

# Neon Postgres (preferred)
# You can set a single DATABASE_URL and the app will derive the driver-specific URLs.
# DATABASE_URL="postgresql://app_user:PASSWORD@ep-XYZ.eu-central-1.aws.neon.tech/neondb?sslmode=require"
SYNC_DATABASE_URL="postgresql+psycopg://app_user:PASSWORD@ep-XYZ.eu-central-1.aws.neon.tech/neondb?sslmode=require"
ASYNC_DATABASE_URL="postgresql+asyncpg://app_user:PASSWORD@ep-XYZ.eu-central-1.aws.neon.tech/neondb?sslmode=require"

# SQLite fallback (local-only quickstart)
# SYNC_DATABASE_URL="sqlite:///./app.db"
# ASYNC_DATABASE_URL="sqlite+aiosqlite:///./app.db"

PYTHONDONTWRITEBYTECODE=1

# LLM provider settings (place real keys only in local .env, never commit!)
LLM_PROVIDER="openai"
LLM_API_KEY="YOUR_OPENAI_API_KEY"
LL_MODEL="gpt-5-mini"
EMBEDDING_PROVIDER="openai"
EMBEDDING_API_KEY="YOUR_OPENAI_API_KEY"
EMBEDDING_MODEL="text-embedding-3-small"

# CORS allowed origins (set your Vercel domain in production)
# Example: ["https://your-app.vercel.app"]
ALLOWED_ORIGINS=["http://localhost:3000","http://127.0.0.1:3000"]

# Connection pool tuning for Neon (Railway/Render)
# Keep pools small to avoid exceeding Neon connection limits
DB_POOL_SIZE=5
DB_MAX_OVERFLOW=2
DB_POOL_TIMEOUT=30

# Disable background tasks for serverless; keep true/empty for Railway
# DISABLE_BACKGROUND_TASKS=true

# Clerk (JWT verification in API; optional in Phase 1)
# CLERK_JWT_ISSUER="https://YOUR-CLERK-DOMAIN.clerk.accounts.dev"
# CLERK_AUDIENCE="backend"

# Stripe (server-side only)
# Do NOT put real keys here. Set them in your hosting provider's env vars.
STRIPE_SECRET_KEY="__SET_IN_DEPLOYMENT__"
STRIPE_WEBHOOK_SECRET="__SET_IN_DEPLOYMENT__"
