name: Deploy Backend to Railway

on:
  push:
    branches:
      - security-hardening-neon
  workflow_dispatch:

concurrency:
  group: deploy-backend-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      RAILWAY_PROJECT_ID: d230e3a7-2d35-4a99-9a59-7b43d5b9c1cf
      RAILWAY_ENVIRONMENT: production
      SERVICE_NAME: "Resume-Matcher"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Railway CLI
        run: npm i -g @railway/cli

      - name: Auth sanity check (token-based, no linking)
        run: |
          railway --version
          # Safe debug: verify token is injected (do not print the token)
          if [ -z "$RAILWAY_TOKEN" ]; then
            echo "RAILWAY_TOKEN is missing in this run. Add it as a repository secret named RAILWAY_TOKEN." && exit 1
          else
            echo "RAILWAY_TOKEN present. length=${#RAILWAY_TOKEN}"
          fi
          # Verify token works; fail fast with a clear hint if not
          railway whoami || (echo "Railway auth failed. Ensure RAILWAY_TOKEN is a Personal (account) token in GitHub Secrets (not a project token)." && exit 1)

      - name: Sync Railway variables from GitHub Secrets (no placeholders)
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          # Ensure service exists (idempotent)
          railway add --service "$SERVICE_NAME" || true
          # Set variables only if provided in Secrets; skip deploy triggers here
          if [ -n "$DATABASE_URL" ]; then
            railway variables -e "$RAILWAY_ENVIRONMENT" -s "$SERVICE_NAME" --set "DATABASE_URL=$DATABASE_URL" --skip-deploys
          fi
          if [ -n "$OPENAI_API_KEY" ]; then
            railway variables -e "$RAILWAY_ENVIRONMENT" -s "$SERVICE_NAME" --set "OPENAI_API_KEY=$OPENAI_API_KEY" --skip-deploys
          fi

      - name: Deploy snapshot (Dockerfile, preDeploy + start from railway.toml)
        run: |
          # Ensure service exists, then deploy (no linking; scoped by env/service)
          railway add --service "$SERVICE_NAME" || true
          railway up --detach --ci -e "$RAILWAY_ENVIRONMENT" -s "$SERVICE_NAME" \
            || railway redeploy -e "$RAILWAY_ENVIRONMENT" -s "$SERVICE_NAME"

      - name: Show last 200 log lines (backend service)
        run: |
          # Some CLI versions require the separator before extra flags
          railway logs -e "$RAILWAY_ENVIRONMENT" -s "$SERVICE_NAME" -- --lines 200 || railway logs -e "$RAILWAY_ENVIRONMENT" -s "$SERVICE_NAME" || true
